version: "3.8"

networks:
  geonames:
    driver: bridge
  admin:
    driver: bridge

services:
 postgres:
   image: postgis/postgis:16-3.4
   container_name: postgres-postgis
   environment:
     POSTGRES_USER: ${POSTGRES_USER}
     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
     POSTGRES_TIMEZONE: Europe/Minsk
     POSTGRES_LOG_TIMEZONE: Europe/Minsk
   ports:
     - '5432:5432'
   volumes:
     - '${POSTGRES_DATA}:/var/lib/postgresql/data'
   networks:
     - geonames
     - admin
   restart: always

 pgadmin:
   container_name: pgadmin
   image: dpage/pgadmin4:7
   environment:
    PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
    PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
   ports:
     - "5050:80"
   volumes:
     - '${PG_ADMIN_DATA}:/var/lib/pgadmin'
   networks:
     - admin

 geoserver:
   image: docker.osgeo.org/geoserver:2.24.x
   container_name: geoserver
   ports:
     - "8092:8080"
   environment:
     INSTALL_EXTENSIONS: "true"
     STABLE_EXTENSIONS: "ysld,h2,mongodb"
     COMMUNITY_EXTENSIONS: "ogcapi-features,ogcapi-images,ogcapi-maps,ogcapi-styles,ogcapi-tiles,sec-keycloak,sec-oauth2-openid-connect,spatialjson,mongodb-schemaless"
     CORS_ENABLED: true
     CORS_ALLOWED_ORIGINS: ${CLIENT_ORIGIN_HOST}
     CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE,HEAD,OPTIONS
     CORS_ALLOWED_HEADERS: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers
   volumes:
     - '${GEOSERVER_DATA}:/opt/geoserver_data'
     - '${GEOSERVER_EXTENSIONS}:/opt/additional_libs'
   networks:
     - geonames
     - admin
   restart: always
 
 api-gateway:
   image: enjoybymap/api-gateway:1.0.0
   container_name: api-gateway
   ports:
     - "8080:8080"
   volumes:
     - '${GATEWAY_DATA}:/opt/gateway_data'
   networks:
     - geonames
   restart: always
  
 mongodb:
   image: mongo:6.0  
   container_name: mongodb  
   ports:
     - "27017:27017"
   environment:
     - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}      
   volumes:
     - '${MONGO_DATA}:/data/db'
   networks:
     - geonames
     - admin
   restart: always
   
 mongo-express:
   image: mongo-express
   container_name: mongo_express
   ports:
     - "8093:8081"
   environment:
     - ME_CONFIG_MONGODB_SERVER=mongodb
     - ME_CONFIG_MONGODB_PORT=27017
     - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
     - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD} 
   networks:
     - admin
   depends_on:
     - mongodb     
    
      
      
 
 